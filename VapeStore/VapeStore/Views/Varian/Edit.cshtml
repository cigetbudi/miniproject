@model VapeStore.ViewModel.VarianViewModel


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.VarianCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VarianCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VarianCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VarianName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VarianName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VarianName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CategoryCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryCode, (IEnumerable<SelectListItem>)ViewBag.CategoryList, "Select Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryCode, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ItemCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ItemCode, (IEnumerable<SelectListItem>)ViewBag.ItemList, "Select Item", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItemCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Strength, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Strength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Strength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PGVG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PGVG, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PGVG, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" value="Save Change" class="btn btn-success btn-save">Save</button>
                <button type="button" value="Cancel" class="btn btn-default" data-dismiss="modal">Cancel</button>  
            </div>
        </div>
    </div>
}




    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $('#CategoryCode').change(function () {
        //alert('aa')
        $.ajax({
            url: '@Url.Action("GetByCategory", "Item")',
            type: 'get',
            data: { categoryCode: $(this).val() },
            success: function (result) {
                $("#ItemCode").html(result);
            }
        });
    });

    $(".btn-save").click(function () {
        var item = {
            Id: $("#Id").val(),
            VarianCode: $("#VarianCode").val(),
            VarianName: $("#VarianName").val(),
            ItemCode: $("#ItemCode").val(),
            Country: $("#Country").val(),
            Strength: $("#Strength").val(),
            PGVG: $("#PGVG").val(),
            Size: $("#Size").val(),
            Price: $("#Price").val(),
            Unit: $("#Unit").val(),
            IsActive: $("#IsActive").is(":checked")

        };

        $.ajax({
            url: '@Url.Action("Edit", "Varian")',
            type: 'post',
            data: { model: item },
            success: function (result) {
                if (result.success) {
                    $("#modal-form").modal("hide");
                    ShowList();
                } else {
                    alert('Error : ' + result.message);
                }
            }
        });
    });
    </script>